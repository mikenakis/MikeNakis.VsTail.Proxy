<Project Sdk="Microsoft.NET.Sdk">

	<!-- PEARL: when it comes to editing .csproj files, Visual studio offers an abysmally poor developer experience:
		- It keeps modifying .csproj files, sometimes messing them up.
		- It keeps warning us that the project file has been changed and we better reload the project "or else."
		- It keeps closing the project file when we reload the project.
		- It makes it difficult to open the project file if it has been unable to load it.
		- It keeps reloading project files each time we save them.
		- With each reload of the project file it loses undo information and it scrolls to the top.
		To somewhat mitigate all this madness, we put nothing in .csproj files but a single statement which imports
		another	project file with an extension that is not .csproj, so that:
		- Visual Studio will leave the other project file alone.
		- When Visual Studio modifies this file, it is easy to take notice. -->
	<!-- PEARL: MSBuild compiles WPF projects twice, and this causes problems!
	    Ideally, we would like the following statement to be as follows:
			<Import Project="$(MSBuildProjectName).proj.xml" />
		This works fine on most projects; however, on WPF projects, we get the following error:
			[...] <project-name>_<random-letters>_wpftmp.csproj(<N>,<N>): error MSB4019: The imported project
		    "[...] <project-name>_<random-letters>_wpftmp.proj.xml" was not found. Confirm that the expression in the
			Import declaration "<project-name>_<random-letters>_wpftmp.proj.xml" is correct, and that the file exists
			on disk.
		So, in WPF projects we cannot use $(MSBuildProjectName). Luckily, $(AssemblyName) will usually work.
	-->
	<Import Project="$(AssemblyName).proj.xml" />

</Project>
