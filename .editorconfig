# NOTE: this .editorconfig file contains only options that cannot be placed in .globalconfig.
#       for all other options and analyzer rules, each project file is supposed to include .globalconfig file(s).

root = true

[*]

# Tab preferences
# PEARL: The "Tab size" needs to be exactly the same as "Indent size" or else weird things will happen.
# PEARL: Whatever values you enter in there might not take effect unless Visual Studio is restarted.
indent_style = tab
indent_size = tab
# tab_width = 4 <-- We intentionally do _not_ set this!
# Justification: we use tabs and we refrain from specifying the tab width so that each developer can specify their
#    preferred tab width in Visual Studio -> Options -> Text Editor -> All Languages -> Tabs.
#    This way, each developer can view and edit code using whatever indentation they like without having to reformat
#    the code.

end_of_line = lf
# Justification: Microsoft take its arcane, capricious, problematic crlf convention and shove it there where the sun
#    don't shine.

charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true

max_line_length = off
# Justification: A line of code should be as long as the programmer wishes it to be.
#    We use an editor guideline to provide a visual hint as to where lines of code should ideally end, but this is only
#    advisory: it is perfectly fine for lines of code to extend past the guideline.
#    Feel free to push uninteresting stuff off the right edge of the screen in order to fit more interesting stuff
#    vertically in the screen.
#    If you want to make sure that all that is visible is all that there is, use the "Word Wrap" feature of the editor.

# The "guidelines" setting is implemented by a Visual Studio Extension.
# See "EditorConfig Guidelines" by Ivan.Z https://marketplace.visualstudio.com/items?itemName=Ivan.EditorConfigGuidelines
# See "Editor Guidelines" by Paul Harrington https://marketplace.visualstudio.com/items?itemName=PaulHarrington.EditorGuidelinesPreview
# The better one is "Editor Guidelines" by Paul Harrington.
guidelines = 120
guidelines_style = 2px dotted 40966969
# Justification: Toto I don't think we are in the Eighties anymore.

###############################################################################

# PEARL: There exists no official, canonical, authoritative, exhaustive reference for the spell checker.
#        All that exists is an article and some blog posts that talk about it in wishy-washy, hand-wavy terms:
#         - "Learn about the Spell Checker"
#           https://learn.microsoft.com/en-us/visualstudio/ide/text-spell-checker
#         - "Visual Studio Spell Checker Preview Now Available"
#           https://devblogs.microsoft.com/visualstudio/visual-studio-spell-checker-preview-now-available/
#         - "Improving the Spell Checker"
#           https://devblogs.microsoft.com/visualstudio/improving-the-spell-checker/
# PEARL: For the spell-checker to work, it is not enough to configure it in the .editorconfig file;
#        each developer must also manually select "Enable Spell Checker" in Visual Studio -> Edit -> Advanced.
# PEARL: By keeping the spell-checker configuration in the [*] section, we can enjoy spell-checking not only on .cs
#        files, but also .md files; however, all other file types such as .xaml files, .csproj files, and even this
#        very .editorconfig file, will NOT be spell-checked, despite matching the [*] pattern. Because, Microsoft.
# PEARL: The spell-checking dictionary for "en-us" apparently includes the word "Covfefe".

spelling_languages = en-us
# Justification: "initialise" instead of "initialize" makes me angry.

# Possible values seem to be: strings, identifiers, comments.
spelling_checkable_types = strings, identifiers, comments
# Justification: we either spell-check, or we don't. If we do, then we better have everything spell-checked.

# PEARL: Microsoft chooses to think of this file it in terms of exclusion, which is entirely unwarranted.
#        As far as we are concerned, this file has nothing to do with any form of exclusion; 
#        it is our custom spell-checking dictionary.
spelling_exclusion_path = ./exclusion.dic
# Justification: use the default because Microsoft has a rather poor track record of allowing people to deviate from
#    the defaults.

spelling_use_default_exclusion_dictionary = false
# Justification: The "default exclusion dictionary" for C# (csharp.dic) contains a ton of nonsense which we definitely
#    do not want to allow.

# Possible values seem to be: error, warning, information, hint.
spelling_error_severity = information

########################################################################################################################

[*.xaml.cs]

# CA1812: Avoid uninstantiated internal classes
#         a.k.a. "'<?>' is an internal class that is apparently never instantiated. If so, [bla bla...]"
dotnet_diagnostic.CA1812.severity = none
# Justification: The compiler has no notion of WPF and how it works, so it is under the impression that most of our views
#    are never instantiated.

[*.md]
max_line_length = off
trim_trailing_whitespace = false

[{*.g.cs}]
generated_code = true
