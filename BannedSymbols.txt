// Mikenakis.CommonFiles\BannedSymbols.txt
//
// Solution-wide banned symbols.
// This file is used by Microsoft.CodeAnalysis.BannedApiAnalyzers
//   Web site: https://github.com/dotnet/roslyn/tree/main/src/RoslynAnalyzers/Microsoft.CodeAnalysis.BannedApiAnalyzers
//   NuGet package: https://www.nuget.org/packages/Microsoft.CodeAnalysis.BannedApiAnalyzers/
//
// PEARL: If you try adding this file to the "Solution Items" folder of a solution, Visual Studio will refuse with
//    some ridiculous error message saying something along the lines that a project file cannot be added to the solution
//    items. However, you can manually edit the solution file and add the file to it, and then everything is fine.
// PEARL: The preposterous syntax that is used in this file for referring to lanugage constructs is called
//    'documentation id'. The reference for it is here:
//    https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/documentation-comments#d42-id-string-format
// PEARL: The slightest typo (including a space there where none is expected) will be met with SILENT FAILURE.

M:System.Linq.Enumerable.ToArray`1(System.Collections.Generic.IEnumerable{``0}) ; Use `.Collect()` instead.
//T:System.Collections.Generic.List`1 ; Use new MutableList<T>( enumerable ) instead.
//M:System.Linq.Enumerable.ToList`1(System.Collections.Generic.IEnumerable{``0}) ; Use `new MutableList()` instead.
//M:System.Linq.Enumerable.AsEnumerable`1(System.Collections.Generic.IEnumerable{``0}) ; 
P:System.DateTime.Now ; Use `Clock` instead.
P:System.DateTime.UtcNow ; Use `Clock` instead.
M:System.DateTimeOffset.op_Implicit(System.DateTime) ; Do not implicitly cast DateTime to DateTimeOffset.
T:System.IO.File ; Use `FilePath` instead.
T:System.IO.Directory ; Use `DirectoryPath` instead.
T:System.IO.Path ; Use `FilePath` or `DirectoryPath` instead.
P:System.Text.Encoding.UTF8 ; Use DotNetHelpers.BomlessUtf8 instead.
M:System.Object.ReferenceEquals(System.Object,System.Object) ; Use `object.ReferenceEquals( object )` instead, which only works for classes and is undefined for structs.

//TODO:
//M:System.Linq.Enumerable.SequenceEqual`1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}) ; Use `DotNetHelpers.Equals()` instead.

//T:Graphs.DirectedGraph`1;Don't use it
